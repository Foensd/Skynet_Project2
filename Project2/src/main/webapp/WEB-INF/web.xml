<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>Project2</display-name>
 <!-- Context-params, they're back! Parameters set in the context scope, 
		ie, Application scope. Spring MVC will use these parameters to determine 
		where to look for our bean definition. -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/beans.xml</param-value>
	</context-param>
	
	<!-- Next we hook up the Spring mvc listener. this will take all requests and forward them to our dispatcherServlet.
	NOTE: this is pulling from the spring-mvc library, syntax must be perfect. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- Here we have the only servlet we map. Our DispatcherServlet.
		NOTE: we provide it the config-scope parameter for info on where our beans are. -->
	<servlet>
		<servlet-name>SpringDispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/beans.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<!-- As all good servlets, it is hooked up to handle the base url. -->
	<servlet-mapping>
		<servlet-name>SpringDispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>